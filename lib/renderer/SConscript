#Copyright (C) 2011 by Francois Coulombe

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# 

Import('env')

name = "renderer"
incPath = [env.Dir("#/lib/%s" % name)]
dependencies = [ 'gcl', 'opencv', 'opengl', 'glew', 'libpng']


if  env['PLATFORM']=='posix':
	dependencies.append('glew')
	glewPreProc = ["-DENABLE_GLEW=1"]
elif  env['PLATFORM']=='win32':
	dependencies.append('glew')
	glewPreProc = ["-DENABLE_GLEW=1"]
elif env['PLATFORM']=='darwin':
	glewPreProc = ["-DENABLE_GLEW=0"]
else:
	print "Platform: %s" % env['PLATFORM'] #leave this here so that we catch new platforms
	glewPreProc = ["-DENABLE_GLEW=0"]
cflags = []
cflags.extend(glewPreProc)

cflags.extend(['-DENABLE_FIX_PIPELINE=1'])


env.AppendUnique(CPPFLAGS=cflags)
env.AppendUnique(CXXFLAGS=cflags)
env.AppendUnique(CFLAGS=cflags)

env.AppendUnique(CPPPATH=incPath)
env.AppendUnique(CXXPATH=incPath)
env.AppendUnique(CPATH=incPath)


src_files = env.Glob("*.cpp")
lib = env.KStaticLibrary(name, src_files, dependencies)
env.AddComponent(name, cflags, incPath, lib, dependencies)

