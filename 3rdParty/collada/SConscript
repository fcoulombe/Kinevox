import platform

Import('env')


name = "collada"
dependencies = []

def SetCFlags(ienv):
    if ienv['PLATFORM'] == "win32":
        ienv.Append(CPPPATH=[env.Dir('#3rdParty/collada/include/COLLADABaseUtils')]) 
        ienv.Append(CPPPATH=[env.Dir('#3rdParty/collada/include/COLLADAFramework')]) 
        ienv.Append(CPPPATH=[env.Dir('#3rdParty/collada/include/COLLADASaxFrameworkLoader')]) 
    else:  
        ienv.ParseConfig('pkg-config --cflags collada') 
	
		
def SetLFlags(ienv):
    platform.machine(),  platform.architecture()[0]
    if ienv['PLATFORM'] == "win32":
        libPath = "#3rdParty/collada/lib/" + platform.architecture()[0] + "/"
        configuration = GetOption('configuration')
        suffix = ""
        if configuration == "debug":
            suffix = "_d"
        file = [env.File(libPath+"COLLADABaseUtils"+suffix+".lib"),
                env.File(libPath+"COLLADAFramework"+suffix+".lib"), 
                env.File(libPath+"COLLADASaxFrameworkLoader"+suffix+".lib"),
                env.File(libPath+"GeneratedSaxParser"+suffix+".lib"),
                env.File(libPath+"LibXML"+suffix+".lib"),
                env.File(libPath+"MathMLSolver"+suffix+".lib"),
                env.File(libPath+"pcre"+suffix+".lib")]
        ienv.Append(LIBS=[file]) 
    else: 
        ienv.ParseConfig('pkg-config --libs collada')
dllDep = []

env.AddComponent(name, None, None,None,dependencies, SetCFlags, SetLFlags, dllDep)
