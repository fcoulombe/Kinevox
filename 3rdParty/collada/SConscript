import platform

Import('env')


name = "collada"
dependencies = []

def SetCFlags(ienv):
    if ienv['PLATFORM'] == "win32":
        ienv.Append(CPPPATH=[env.Dir('#3rdParty/collada/include/COLLADABaseUtils')]) 
        ienv.Append(CPPPATH=[env.Dir('#3rdParty/collada/include/COLLADAFramework')]) 
        ienv.Append(CPPPATH=[env.Dir('#3rdParty/collada/include/COLLADASaxFrameworkLoader')]) 
    else:  
        print "unsupported architecture: %s" % platform.architecture()[0] 
	
		
def SetLFlags(ienv):
    platform.machine(),  platform.architecture()[0]
    if ienv['PLATFORM'] == "win32":
        libPath = "#3rdParty/collada/lib/" + platform.architecture()[0] + "/"
        file = [env.File(libPath+"COLLADABaseUtils_d.lib"),
                env.File(libPath+"COLLADAFramework_d.lib"), 
                env.File(libPath+"COLLADASaxFrameworkLoader_d.lib"),
                env.File(libPath+"GeneratedSaxParser_d.lib"),
                env.File(libPath+"LibXML_d.lib"),
                env.File(libPath+"MathMLSolver_d.lib"),
                env.File(libPath+"pcre_d.lib")]
        ienv.Append(LIBS=[file]) 
    else: 
        if platform.architecture()[0] == "32bit":
            file = env.File("#3rdParty/fbx/lib/gcc4/x86/libfbxsdk-2013.1-static.a")
            ienv.Append(LIBS=[file, 'pthread', 'dl']) 
        
        elif platform.architecture()[0] == "64bit":
            file = env.File("#3rdParty/fbx/lib/gcc4/x64/libfbxsdk-2013.1-static.a")
            ienv.Append(LIBS=[file, 'pthread', 'dl'])  
        else:
            print "unsupported architecture: %s" % platform.architecture()[0] 
    
dllDep = []

env.AddComponent(name, None, None,None,dependencies, SetCFlags, SetLFlags, dllDep)
