import platform

Import('env')


name = "fbx"
dependencies = []

def SetCFlags(ienv):
    if ienv['PLATFORM'] == "win32":
        ienv.Append(CPPPATH=[env.Dir('C:\\Program Files\\Autodesk\\FBX\\FBX SDK\\2013.3\\include')]) 
    else:
        configuration = GetOption('configuration')
        if platform.architecture()[0] == "32bit":
            #ienv.Append(CPPPATH=[env.Dir('include')])
            ienv.Append(CPPPATH=[env.Dir('#3rdParty/fbx/include')]) 
        elif platform.architecture()[0] == "64bit":
            ienv.Append(CPPPATH=[env.Dir('#3rdParty/fbx/include')])  
        else:
            print "unsupported architecture: %s" % platform.architecture()[0] 
	
		
def SetLFlags(ienv):
    platform.machine(),  platform.architecture()[0]
    if ienv['PLATFORM'] == "win32":
        file = env.File("C:\\Program Files\\Autodesk\\FBX\\FBX SDK\\2013.3\\lib\\vs2010\\x86\\fbxsdk-2013.3.lib")
        ienv.Append(LIBS=[file]) 
    else: 
        if platform.architecture()[0] == "32bit":
            file = env.File("#3rdParty/fbx/lib/gcc4/x86/libfbxsdk-2013.1-static.a")
            ienv.Append(LIBS=[file, 'pthread', 'dl']) 
        
        elif platform.architecture()[0] == "64bit":
            file = env.File("#3rdParty/fbx/lib/gcc4/x64/libfbxsdk-2013.1-static.a")
            ienv.Append(LIBS=[file, 'pthread', 'dl'])  
        else:
            print "unsupported architecture: %s" % platform.architecture()[0] 
    
dllDep = []
if env['PLATFORM'] == "win32":
    dllDep = [env.File("C:\\Program Files\\Autodesk\\FBX\\FBX SDK\\2013.3\\lib\\vs2010\\x86\\fbxsdk-2013.3.dll")]

env.AddComponent(name, None, None,None,dependencies, SetCFlags, SetLFlags, dllDep)
